@using Microsoft.AspNetCore.Identity;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" href="#"><ion-icon
                    name="person-circle-outline" class="me-1 align-middle ionic-icons"></ion-icon>Welcome : <b>@UserManager.GetUserName(User)</b></a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Authentication" asp-action="Logout"><ion-icon
                    name="log-out-outline" class="me-1 align-middle ionic-icons"></ion-icon>Logout</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-action="SignUp" asp-controller="Authentication"><ion-icon
                    name="person-add-outline" class="me-1 align-middle ionic-icons"></ion-icon>SignUp</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Authentication" asp-action="Login"><ion-icon name="log-in-outline"
                    class="me-1 align-middle ionic-icons"></ion-icon>Login</a>
        </li>
    }

</ul>